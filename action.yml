---
# yamllint disable rule:line-length
name: Setup Action
description: |
  Sets up all the required env variables to be used by others

  - **Secret Environment Variables**: It retrieves secret values stored in AWS Secrets Manager from the ARN `arn:aws:secretsmanager:us-east-2:108141096600:secret:actions-secret-v2` and sets them as secret environment variables.

  - **Non-Secret Environment Variables**: It retrieves non-secret variables from the AWS SSM Parameter Store using the ARN `arn:aws:ssm:us-east-2:108141096600:parameter/actions-envs` and sets them as regular environment variables.

  This allows the application to securely access both sensitive and non-sensitive configuration values without hardcoding them.

  ## Permissions

  Add the following permissions to the job

  ```yaml
  permissions:
    id-token: write
    contents: read
  ```

  ## Usage

  ```yaml
      - name: Setup
        uses: variant-inc/actions-setup@v2
  ```
outputs:
  image_version:
    description: >-
      Returns a semantic version that can used as a version for docker,
      helm, octopus, etc
    value: ${{ steps.set-version.outputs.image-version }}
runs:
  using: composite
  steps:
    - shell: bash
      run: |
        mkdir -p ./.github/workflows/actions-setup/checkout
        cp -R ${{ github.action_path }}/checkout/* ./.github/workflows/actions-setup/checkout/

    - name: Run checkout action
      uses: ./.github/workflows/actions-setup/checkout

    - name: Get the 10th last commit SHA
      id: get_commit
      shell: bash
      run: |
        commit_sha=$(git rev-list --max-count=9 HEAD | tail -1)
        echo "10th last commit SHA: $commit_sha"
        echo "sha=$commit_sha" >> "$GITHUB_OUTPUT"

    - name: GitGuardian scan
      if: ${{ env.DISABLE_GITGUARDIAN == 'false' }}
      uses: GitGuardian/ggshield-action@v1
      env:
        GITHUB_PUSH_BEFORE_SHA: ${{ steps.get_commit.outputs.sha }}
        GITHUB_PUSH_BASE_SHA: ${{ github.event.base }}
        GITHUB_DEFAULT_BRANCH: ${{ github.event.repository.default_branch }}
        GITGUARDIAN_API_KEY: ${{ env.GITGUARDIAN_API_KEY }}

    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v4
      with:
        versionSpec: 6.3.x
    - name: Create GitVersion.yml if not exists
      shell: bash
      run: |
        FILE=GitVersion.yml
        if [ -f "$FILE" ]; then
          echo "::debug::$FILE exists."
        else
          echo "::debug::::debug::$FILE does not exist."
          echo "Creating $FILE..."
          cp ${{ github.action_path }}/GitVersion.yml GitVersion.yml
        fi
    - name: Determine Version
      uses: gittools/actions/gitversion/execute@v4

    - name: Set Version
      id: set-version
      shell: bash
      run: ${{ github.action_path }}/scripts/set_version.sh

    - name: Run delete-stale-branches
      id: delete-stale-branches
      shell: bash
      run: ${{ github.action_path }}/scripts/delete_stale_branches.sh
      env:
        GITHUB_TOKEN: ${{ env.GITHUB_ENTERPRISE_KEY }}
        DRY_RUN: true
        DELETE_TAGS: true
        MINIMUM_TAGS: 30
        DATE: 2 weeks ago
        DELETE_RELEASES: true
        LOG_LEVEL: DEBUG